error_log = /DATA/logs/php-fpm/php-fpm.log 
log_level = warning

[www]
user = nginx
group = www-data
listen = 127.0.0.1:9000
listen.owner = nginx
listen.group = www-data
pm = ondemand
pm.max_children = 75
pm.process_idle_timeout = 10s
pm.max_requests = 500
chdir = /DATA/htdocs
php_flag[display_errors] = on
php_admin_value[memory_limit] = 128M
php_admin_value[upload_max_filesize] = 2G
php_admin_value[post_max_size] = 2G
php_admin_value[always_populate_raw_post_data] = -1
php_admin_value[output_buffering] = 0
php_admin_value[php_value max_input_time] = 3600
php_admin_value[php_value max_execution_time] = 3600
php_admin_value[openssl.cafile] = /etc/ssl/certs/ca-certificates.crt
php_admin_value[openssl.capath] = /etc/ssl/certs
php_admin_value[max_input_vars] = 10000
php_admin_value[max_input_nesting_level] = 256

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Default Value: no
catch_workers_output = yes


; Database variables passed via -e argument on Docker
env["DB_HOST"] = "$DB_HOST"
env["DB_USER"] = "$DB_USER"
env["DB_PASS"] = "$DB_PASS"
env["DB_NAME"] = "$DB_NAME"
; DEV STAGING LIVE
; used to indicate the actual ENVIRONMENT that the container is running
; very useful for setting variables.
env["ENVIRONMENT"] = "LIVE"
